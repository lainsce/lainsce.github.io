.image-coin {
    background: linear-gradient(150deg,#c8e6c9 0%,#a5d6a7 100%);
}

.image-notejot {
    background: linear-gradient(150deg,#fff59d 0%,#fff06a 100%);
}

.image-quilter {
    background: linear-gradient(150deg,#bbdefb 0%,#8bc7f8 100%);
}

.image-palaura {
    background: linear-gradient(150deg,#ef9a9a 0%,#e86e6e 100%);
}

.image-hack {
    background-color: #213C86;
}

.has-text-patreon {
    color: #F96854 !important;
}

.button.is-patreon {
    background-color: #F96854;
    border-color: transparent;
    color: #fff;

    &:hover {
        background-color: #E85743;
        border-color: transparent;
        color: #fff;
    }

    &:active {
        background-color: #E85743;
        border-color: transparent;
        color: #fff;
    }

    &:focus:not(:active) {
        box-shadow: 0 0 0 0.125em rgba(#E85743,.25);
    }
}

.header-icon-star {
    color: #FFDD57;
}

.header-icon-economy {
    color: #57DD88;
}

.header-icon-tech {
    color: #5788DD;
}

.custom-title {
    color: #000000aa;
    font-size: 1.5rem;
    text-align: center;
    display: block;
}

.custom-image {
    text-align: center;
    padding: 1.2rem 0;
}

.custom-card-banner {
    text-align: center;
    padding: 1.2rem 0;
}

.custom-banner {
    width: 70%;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    padding: 0;
    margin: 0 auto;
    display: inline;
}

.tag:not(body).is-vala {
    background-color: #403757;
    color: #fff;
}

.navbar-burger {
    color: #fff;

    &:active {
        border: none;
        color: #fff;
    }

    &:hover {
        border: none;
        color: #aaa;
    }
}

#tab_container .container_item {
  display: none;
}

#tab_container .container_item.is-active {
  display: block;
}

@media only screen and (min-width: 960px) {
    .flow-text {
        font-size: 1.68rem;
    }
}

@media only screen and (min-width: 930px) {
    .flow-text {
        font-size: 1.656rem;
    }
}

@media only screen and (min-width: 900px) {
    .flow-text {
        font-size: 1.632rem;
    }
}

@media only screen and (min-width: 870px) {
    .flow-text {
        font-size: 1.608rem;
    }
}

@media only screen and (min-width: 840px) {
    .flow-text {
        font-size: 1.584rem;
    }
}

@media only screen and (min-width: 810px) {
    .flow-text {
        font-size: 1.56rem;
    }
}

@media only screen and (min-width: 780px) {
    .flow-text {
        font-size: 1.536rem;
    }
}

@media only screen and (min-width: 750px) {
    .flow-text {
        font-size: 1.512rem;
    }
}

@media only screen and (min-width: 720px) {
    .flow-text {
        font-size: 1.488rem;
    }
}

@media only screen and (min-width: 690px) {
    .flow-text {
        font-size: 1.464rem;
    }
}

@media only screen and (min-width: 660px) {
    .flow-text {
        font-size: 1.44rem;
    }
}

@media only screen and (min-width: 630px) {
    .flow-text {
        font-size: 1.416rem;
    }
}

@media only screen and (min-width: 600px) {
    .flow-text {
        font-size: 1.392rem;
    }
}

@media only screen and (min-width: 570px) {
    .flow-text {
        font-size: 1.368rem;
    }
}

@media only screen and (min-width: 540px) {
    .flow-text {
        font-size: 1.344rem;
    }
}

@media only screen and (min-width: 510px) {
    .flow-text {
        font-size: 1.32rem;
    }
}


@media only screen and (min-width: 480px) {
    .flow-text {
        font-size: 1.296rem;
    }
}

@media only screen and (min-width: 450px) {
    .flow-text {
        font-size: 1.272rem;
    }
}

@media only screen and (min-width: 420px) {
    .flow-text {
        font-size: 1.248rem;
    }
}

@media only screen and (min-width: 390px) {
    .flow-text {
        font-size: 1.224rem;
    }
}

@media only screen and (min-width: 360px) {
    .flow-text {
        font-size: 1.2rem;
    }
}

.flow-text {
    font-weight: 400;
}

// Material Shadow Mixin. Ripped from CSS Tricks. This is most of the heavy lifting and I can't take credit.
// Source -> https://css-tricks.com/snippets/sass/material-shadows-mixin/

@function top-shadow($depth) {
  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
  $blur: nth(1.5 3 10 14 19, $depth) * 4px;
  $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));

  @return 0 $primary-offset $blur $color;
}
@function bottom-shadow($depth) {
  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
  $blur: nth(1 3 3 5 6, $depth) * 4px;
  $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));

  @return 0 $primary-offset $blur $color;
}
@mixin card($depth:1) {
  @if $depth < 1 {
    box-shadow: none;
  } @else if $depth > 5 {
    @warn "Invalid $depth `#{$depth}` for mixin `card`.";
  } @else {
    box-shadow: bottom-shadow($depth), top-shadow($depth);
    transition: all 0.3s cubic-bezier(.25,.8,.25,1);
  }
}

// Ripped from a contribution in the comments from the above code

@for $i from 1 through 5 {
  .z-#{$i} {
    @include card($i);
  }
  .z-h:hover {
    @include card(5);
  }
}

.button {
    &:hover {
        @include card(2);
    }
}

.card {
    &:hover {
        @include card(2);
    }

    &.z-2:hover {
        @include card(3);
    }
}
